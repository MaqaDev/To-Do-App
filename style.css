body {
  height: 100dvh;
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  background-color: #99acff;
  background-image: radial-gradient(
      at 76% 82%,
      hsla(315, 22%, 83%, 1) 0px,
      transparent 50%
    ),
    radial-gradient(at 86% 30%, hsla(191, 25%, 83%, 1) 0px, transparent 50%),
    radial-gradient(at 37% 90%, hsla(216, 37%, 77%, 1) 0px, transparent 50%),
    radial-gradient(at 5% 19%, hsla(240, 20%, 80%, 1) 0px, transparent 50%),
    radial-gradient(at 27% 75%, hsla(90, 13%, 84%, 1) 0px, transparent 50%),
    radial-gradient(at 5% 18%, hsla(95, 44%, 90%, 1) 0px, transparent 50%),
    radial-gradient(at 11% 76%, hsla(282, 22%, 90%, 1) 0px, transparent 50%);
  font-family: "Inter", sans-serif;
  color: #333;
  font-size: 16px;
  line-height: 1.5;
  overflow-y: hidden;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
input {
  padding: 0;
  margin: 0;
}

input[type="text"]:focus {
  outline: 2px solid white;
}

::-webkit-scrollbar {
  display: none;
}

.header {
  display: none;
}

.container {
  position: relative;
  max-width: 1200px;
  margin: 0 auto;
  padding: 64px 16px;
}

@media (max-width: 1200px) {
  .container {
    max-width: 800px;
  }
  .navbar {
    padding-top: 32px !important;
  }
  .navbarText {
    font-size: 16px !important;
  }
}

.navbar {
  padding: 0 18px;
  padding-top: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.navbarText {
  font-family: "Inter", sans-serif;
  font-size: 48px;
  font-weight: 400;
  padding-bottom: 32px;
}

.tooDoo {
  font-size: 1.5em !important;
  background: linear-gradient(to right, var(--＠color-1), var(--＠color-2));
  background-clip: text;
  color: transparent;
  animation: gradientChange 2s ease-out infinite alternate;
}

@property --＠color-1 {
  syntax: "<color>";
  inherits: false;
  initial-value: hsl(310 100% 59%);
}

@property --＠color-2 {
  syntax: "<color>";
  inherits: false;
  initial-value: hsl(204 100% 59%);
}

@keyframes gradientChange {
  from {
    --＠color-1: hsl(210 100% 59%);
    --＠color-2: hsl(310 100% 59%);
  }
  to {
    --＠color-1: hsl(310 100% 59%);
    --＠color-2: hsl(210 100% 59%);
  }
}

.tasksMain {
  max-width: 400px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 20px;
  padding: 12px;
  border-radius: 8px;
  /* box-shadow: 0 5px 15px rgba(0, 0, 0, 0.25); */
  box-shadow: rgba(255, 255, 255, 0.25) 0px 50px 100px -20px,
    rgba(255, 255, 255, 0.3) 0px 30px 60px -30px,
    rgba(255, 255, 255, 0.35) 0px -2px 6px 0px inset;
  max-height: 490px;
  background-color: whitesmoke;
  /* border: 2px solid white; */
  /* box-shadow: 0px 0px 5px #111185, 0px 0px 10px white; */
}

.tasksMainHeader {
  position: sticky;
  padding: 24px 32px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-radius: 8px;
  top: 0;
  z-index: 3;
  /* border: 2px solid white; */
}

.tasksMainHeaderText {
  font-size: 32px;
  font-weight: 100 !important;
  color: #3e51c9;
}

.taskSearchBar {
  width: 100%;
  display: none;
  border: 2px solid white;
}
.taskSearchBarAnimation {
  display: block;
  transform: scaleX(0.15) scaleY(0.15);
  animation: taskSearchBarAnimation 0.35s ease-in-out forwards;
}

@keyframes taskSearchBarAnimation {
  to {
    transform: scaleX(1) scaleY(1);
    transform-origin: center;
  }
}
.taskSearch {
  box-sizing: border-box;
  padding-top: 8px;
}

.searchBtn {
  padding: 0;
  background: none;
  border: none;
  color: #3e51c9;
}

.searchIcon {
  font-size: 20px;
}

.taskSearchBarInput {
  width: 100%;
  box-sizing: border-box;
  border-radius: 8px;
  padding: 8px;
  padding-left: 20px;
  cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="18" height="18" fill="%23000"><path d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6 .1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"/></svg>'),
    auto;
  border: 2px solid #99a7ff;
}

.allTasks {
  position: relative;
  padding: 0 16px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  gap: 20px;
  max-height: 400px;
  overflow-y: auto;
}

@property --loadtime {
  syntax: "<time>";
  inherits: false;
  initial-value: 0.1s;
}

@keyframes taskLoad {
  from {
    /* height: 0; */
    transform: scaleY(0.8);
    opacity: 0.4;
    transform-origin: top;
  }
  to {
    /* height: 100%; */
    transform: scaleY(1);
    opacity: 1;
    transform-origin: top;
  }
}

.addTask {
  padding: 12px;
  box-sizing: border-box;
  display: flex;
  gap: 20px;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  border-radius: 8px;
}

.addTaskInput {
  box-sizing: border-box;
  width: 100%;
  box-sizing: border-box;
  border-radius: 8px;
}

.addTaskInputBar {
  padding: 14px;
  box-sizing: border-box;
  width: 100%;
  border-radius: 8px;
  background: inherit;
  border: 2px solid #99a7ff;
}

.addTaskBtnMain {
  box-sizing: border-box;
}

.addTaskBtn {
  padding: 8px 12px;
  background: inherit;
  box-sizing: border-box;
  font-size: 20px;
  transition: transform 1s;
  border-color: #99a7ff;
}

.addTaskBtn i {
  transition: transform 0.6s;
  color: #99a7ff;
}
.addTaskBtn:hover {
  i {
    transform: rotate(180deg);
  }
}

.task {
  position: relative;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border: 2px solid #99a7ff;
  border-radius: 8px;
  padding: 12px;
}

.taskNameAndCheckbox {
  box-sizing: border-box;
  display: flex;
  align-items: center;
  gap: 10px;
}

.taskName {
  position: relative;
}

.taskDoneLine::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  width: 0;
  height: 2px;
  background-color: #000000;
  animation: taskDoneLineAnimation 0.8s ease-in-out forwards;
  animation-delay: 0.9s;
}

@keyframes taskDoneLineAnimation {
  to {
    width: 100%;
  }
}

.taskMarkAsDone {
  padding-bottom: 3px;
}

.taskMarkAsDone,
.taskEdit,
.taskDelete {
  display: flex;
  align-items: center;
}

.markAsDoneCheckBox {
  width: 20px;
  height: 20px;
}

.taskEditAndDelete {
  box-sizing: border-box;
  display: flex;
  align-items: center;
  gap: 20px;
}

.taskEditBtn,
.taskDeleteBtn {
  background: none;
  border: none;
  padding: 0;
  /* color: #3e51c9; */
}

.editPen,
.trashCan {
  cursor: pointer;
  font-size: 20px;
}

.editPenAnimation {
  animation: editPenTaskDoneAnimation 1.8s linear;
}

.editPen:hover {
  color: blue;
}

@property --moveLeft {
  syntax: width;
  inherits: false;
  initial-value: calc();
}

@keyframes editPenTaskDoneAnimation {
  50% {
    transform: translateX(-260px) translateY(-5px);
  }
}

.taskEditContent {
  display: none;
}

.taskEditMain {
  display: none;
  padding: 12px;
  box-sizing: border-box;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 20px;
  background-color: #f0f0f0;
  border-radius: 8px;
}

.taskEditInput {
  width: 100%;
  box-sizing: border-box;
}

.taskEditInputBar {
  width: 100%;
  box-sizing: border-box;
  padding: 8px;
  background-color: #f0f0f0;
  border-radius: 8px;
  border: 2px solid;
  border-style: dashed !important;
}

.taskEditInputBar:focus {
  outline: none;
  border-style: dashed !important;
}

.taskEditSaveAndCancel {
  display: flex;
  align-items: center;
  gap: 10px;
  button {
    background: none;
    border: none;
    font-size: 24px;
  }
}

.trashCan:hover {
  color: red;
}

.deleteAllMain {
  box-sizing: border-box;
  width: 100%;
  padding: 0 16px;
}

.deleteAllBtn {
  box-sizing: border-box;
  width: 100%;
  padding: 12px 0;
  border: none;
  border-radius: 8px;
  /* border: 2px solid #2323ff; */
  font-family: inherit;
  font-size: 15px;
  color: red;
  background-color: rgb(153, 167, 255, 0.5);
}

/* checkbox added css */
.checkbox-wrapper-42 input[type="checkbox"] {
  display: none;
  visibility: hidden;
}

.checkbox-wrapper-42 label {
  display: inline-block;
}

.checkbox-wrapper-42 .cbx {
  position: relative;
  top: 1px;
  width: 20px;
  height: 20px;
  border: 1px solid #000000;
  border-radius: 3px;
  vertical-align: middle;
  transition: background 0.1s ease;
  cursor: pointer;
}
.checkbox-wrapper-42 .cbx:after {
  content: "";
  position: absolute;
  top: 2px;
  left: 7px;
  width: 5px;
  height: 11px;
  opacity: 0;
  transform: rotate(45deg) scale(0);
  border-right: 2px solid #000000;
  border-bottom: 2px solid #000000;
  transition: all 0.3s ease;
  transition-delay: 0.15s;
}
.checkbox-wrapper-42 .lbl {
  margin-left: 5px;
  vertical-align: middle;
  cursor: pointer;
}
.checkbox-wrapper-42 input[type="checkbox"]:checked ~ .cbx {
  border-color: transparent;
  border: 1px solid #000000;
  color: #000000 !important;
  /* sanimation: jelly-42 0.6s ease; */
}

.taskDoneAnimation {
  animation: jelly-42 0.6s ease;
  animation-delay: 1.8s;
}

.checkbox-wrapper-42 input[type="checkbox"]:checked ~ .cbx:after {
  opacity: 1;
  transform: rotate(45deg) scale(1);
}
.checkbox-wrapper-42 .cntr {
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  text-align: center;
}
@-moz-keyframes jelly-42 {
  from {
    transform: scale(1, 1);
  }
  30% {
    transform: scale(1.25, 0.75);
  }
  40% {
    transform: scale(0.75, 1.25);
  }
  50% {
    transform: scale(1.15, 0.85);
  }
  65% {
    transform: scale(0.95, 1.05);
  }
  75% {
    transform: scale(1.05, 0.95);
  }
  to {
    transform: scale(1, 1);
  }
}
@-webkit-keyframes jelly-42 {
  from {
    transform: scale(1, 1);
  }
  30% {
    transform: scale(1.25, 0.75);
  }
  40% {
    transform: scale(0.75, 1.25);
  }
  50% {
    transform: scale(1.15, 0.85);
  }
  65% {
    transform: scale(0.95, 1.05);
  }
  75% {
    transform: scale(1.05, 0.95);
  }
  to {
    transform: scale(1, 1);
  }
}
@-o-keyframes jelly-42 {
  from {
    transform: scale(1, 1);
  }
  30% {
    transform: scale(1.25, 0.75);
  }
  40% {
    transform: scale(0.75, 1.25);
  }
  50% {
    transform: scale(1.15, 0.85);
  }
  65% {
    transform: scale(0.95, 1.05);
  }
  75% {
    transform: scale(1.05, 0.95);
  }
  to {
    transform: scale(1, 1);
  }
}
@keyframes jelly-42 {
  from {
    transform: scale(1, 1);
  }
  30% {
    transform: scale(1.25, 0.75);
  }
  40% {
    transform: scale(0.75, 1.25);
  }
  50% {
    transform: scale(1.15, 0.85);
  }
  65% {
    transform: scale(0.95, 1.05);
  }
  75% {
    transform: scale(1.05, 0.95);
  }
  to {
    transform: scale(1, 1);
  }
}

/* checkbox added css */
